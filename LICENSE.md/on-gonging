
import numpy as np
import pandas as pd
from pandas import DataFrame

train_df = pd.read_csv('C:/work/house price/input/train.csv', index_col=0)

#test_df = pd.read_csv('C:/work/house price/input/test.csv', index_col=0)

df=pd.read_csv('GE_kW_2009.csv')
df.shape
dw=df.ix[list(range(0,52560)),list(range(5,58))]

from sklearn.linear_model import Ridge
from sklearn.model_selection import cross_val_score


X_train = pd.DataFrame({"LotArea":train_df["LotArea"],"LotFrontage":train_df["LotFrontage"]})
X_test = pd.DataFrame({"LotArea":test_df["LotArea"],"LotFrontage":test_df["LotFrontage"]})

mean_tr= train_df.LotFrontage.mean()
mean_te= test_df.LotFrontage.mean()

X_train = X_train.fillna(mean_tr)
X_test = X_test.fillna(mean_te)

y_train =pd.DataFrame( "log(price + 1)":np.log1p(train_df["SalePrice"]))



alphas = np.logspace(-3, 2, 50)
test_scores = []
for alpha in alphas:
    clf = Ridge(alpha)
    test_score = np.sqrt(-cross_val_score(clf, X_train, y_train, cv=10, scoring='neg_mean_squared_error'))
    test_scores.append(np.mean(test_score))

import matplotlib.pyplot as plt
%matplotlib inline
plt.plot(alphas, test_scores)
plt.title("Alpha vs CV Error");



from sklearn.ensemble import RandomForestRegressor
max_features = [.1, .3, .5, .7, .9, .99]
test_scores = []
for max_feat in max_features:
    clf = RandomForestRegressor(n_estimators=200, max_features=max_feat)
    test_score = np.sqrt(-cross_val_score(clf, X_train, y_train, cv=5, scoring='neg_mean_squared_error'))
    test_scores.append(np.mean(test_score))

plt.plot(max_features, test_scores)
plt.title("Max Features vs CV Error");

