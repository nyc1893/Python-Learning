
import seaborn as sns
import matplotlib.pyplot as plt

tips=sns.load_dataset('tips')
scatter_plot=plt.figure()
axes1=scatter_plot.add_subplot(1,1,1)
axes1.scatter(tips['total_bill'],tips['tip'])
plt.show()


#hist graph
hist=sns.distplot(tips['total_bill'])

hist.set_title('Haha...')

plt.show()


hist=sns.distplot(tips['total_bill'],kde=0)
"""
kde=False is also Ok
hist=0   is to turn off hist
"""
hist.set_title('Haha...')

plt.show()


#add the 
hist=sns.distplot(tips['total_bill'],rug=1)
plt.show()

#count the number
count=sns.countplot('day',data=tips)
plt.show()


#scatter plot with a regsion line
scatter= sns.regplot(x='total_bill', y='tip', data=tips)
plt.show()

#scatterplot with different color
scatter= sns.lmplot(x='total_bill', y='tip', data=tips,hue='sex',fit_reg=0,palette="husl")
plt.show()

#scatterplot with different shape
scatter= sns.lmplot(x='total_bill', y='tip', data=tips,hue='sex',fit_reg=0,
markers=['o','x'])
plt.show()

#scatterplot enlarge the spot
scatter= sns.lmplot(x='total_bill', y='tip', data=tips,hue='sex',fit_reg=0,palette="husl",
scatter_kws={'s':tips['size']*10})
plt.show()


#lmplot the same as the regplot
fig= sns.lmplot(x='total_bill', y='tip', data=tips)
plt.show()

#both the hist and scatter added
scatter= sns.jointplot(x='total_bill', y='tip', data=tips)
plt.show()

#changed to Honeycomb shape
scatter= sns.jointplot(x='total_bill', y='tip', data=tips,kind='hex')
plt.show()

#like the contour line with hist
kde_joint=sns.jointplot(x='total_bill', y='tip',data=tips, kind='kde')
plt.show()

#barline
bar=sns.barplot(x='time',y='total_bill',data=tips)
plt.show()


#violinplot
tips=sns.load_dataset('tips')
violin=sns.violinplot(x='time',y='total_bill',data=tips)
plt.show()

#violinplot with different color split with sex
violin=sns.violinplot(x='time',y='total_bill',data=tips,split=1,hue='sex')
plt.show()

#pair_grid  
"""
 kde density curve;   
 rug Marginal blanket 
  indicate the upper triangle zone is regplots
  indicate the lower triangle zone is kdeplot
  diag zone is displot , displot= hist + cruve
"""
tips=tips[['total_bill','tip','size']]
pair_grid=sns.PairGrid(tips)
pair_grid=pair_grid.map_upper(sns.regplot)
pair_grid=pair_grid.map_lower(sns.kdeplot)
pair_grid=pair_grid.map_diag(sns.distplot)
plt.show()

pair_plot=sns.pairplot(tips,hue='sex')
plt.show()


#1.scatter in 4 features
sns.set(style="ticks", color_codes=True)
iris = sns.load_dataset("iris")
g = sns.pairplot(iris)
plt.show()

#2.scatter in 4 features with color based on "species"
g2 = sns.pairplot(iris, hue="species")
plt.show()

#3.compare to 2 using different color
g3 = sns.pairplot(iris, hue="species", palette="husl")
plt.show()

#4. using different shape
g4 = sns.pairplot(iris, hue="species", markers=["o", "s", "D"])
plt.show()


#5. using kde 
g5 = sns.pairplot(iris, diag_kind="kde")
plt.show()


#6. using regression
g6 = sns.pairplot(iris, kind="reg")
plt.show()

#7. using different shape
g7 = sns.pairplot(iris, diag_kind="kde", markers="+",
                  
plot_kws=dict(s=50, edgecolor="b", linewidth=1),
                 
 diag_kws=dict(shade=True))
plt.show()

#8. You may make combination
g8 = sns.pairplot(iris, diag_kind="kde", markers="+",
hue="species",palette="husl",
plot_kws=dict(s=50, edgecolor="b", linewidth=1),
 diag_kws=dict(shade=True))
plt.show()


# more general way 

tips[['total_bill','tip']].plot.hist()
plt.show()

tips[['total_bill','tip']].plot.kde()
plt.show()

tips.plot.scatter(x='total_bill',y='tip')
plt.show()

tips.plot.hexbin(x='total_bill',y='tip')
plt.show()

tips.plot.hexbin(x='total_bill',y='tip',gridsize=10)
plt.show()

tips.plot.box()
plt.show()


































