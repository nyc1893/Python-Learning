from pandas import DataFrame
from pandas import concat
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

d1=pd.read_csv('C:\\360Downloads\\data\\2008-2010\\whole\\MET_2009.csv')
d2=pd.read_csv('C:\\360Downloads\\data\\2008-2010\\whole\\MET_2010.csv')

d3=pd.read_csv('C:\\360Downloads\\data\\2008-2010\\whole\\Total_kW_2009.csv')
d4=pd.read_csv('C:\\360Downloads\\data\\2008-2010\\whole\\Total_kW_2010.csv')




d5=pd.merge(d1, d3)
d6=pd.merge(d2, d4)

bins = [0, 
22.5, 
45.0,
67.5,
90.0,
112.5,
135.0,
157.5,
180.0,
202.5,
225.0,
247.5,
270.0,
292.5,
315.0,
337.5,
360.0
]

gn=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]

bin2 = [-10000, 5.6, 11.1, 16.7,22.2,27,100]
gn2=[1,2,3,4,5,6]

d5['Wlabel']=pd.cut(d5['Dir A H1'],bins,labels=gn)

d5['sp']=pd.cut(d5['WS A H1'],bin2,labels=gn2)

d5['Wlabel']=d5['Wlabel'].astype('int')
d5['sp']=d5['sp'].astype('int')

d5[d5['sp']>6]=1
d5[d5['sp']<1]=1

m1=d5.loc[0:6*24*31-1]
list1=np.array([0,31, 28, 31, 30, 31, 30,31,31,30,31,30,31])
list2=np.cumsum(list1)


m2=d5.loc[6*24*list2[1]:6*24*list2[2]-1]
m3=d5.loc[6*24*list2[2]:6*24*list2[3]-1]
m4=d5.loc[6*24*list2[3]:6*24*list2[4]-1]
m5=d5.loc[6*24*list2[4]:6*24*list2[5]-1]
m6=d5.loc[6*24*list2[5]:6*24*list2[6]-1]
m7=d5.loc[6*24*list2[6]:6*24*list2[7]-1]
m8=d5.loc[6*24*list2[7]:6*24*list2[8]-1]
m9=d5.loc[6*24*list2[8]:6*24*list2[9]-1]
m10=d5.loc[6*24*list2[9]:6*24*list2[10]-1]
m11=d5.loc[6*24*list2[10]:6*24*list2[11]-1]
m12=d5.loc[6*24*list2[11]:6*24*list2[12]-1]


ddf=d5.loc[d5.index*3]
ddf=ddf.dropna()
ddf=ddf.reset_index(drop = True)

m1['sp'].groupby([m1['Wlabel']])
wk1['sp'].groupby([wk1['Wlabel']])

mm1=wk1.groupby([wk1['Wlabel']]).count()/wk1.shape[0]
mm2=wk2.groupby([wk2['Wlabel']]).count()/wk2.shape[0]
mm3=wk3.groupby([wk3['Wlabel']]).count()/wk3.shape[0]
mm4=wk4.groupby([wk4['Wlabel']]).count()/wk4.shape[0]
mm5=wk5.groupby([wk5['Wlabel']]).count()/wk5.shape[0]

bar=sns.barplot(x='Wlabel',y='sp',data=wk1)
plt.show()

bar=sns.barplot(x='Wlabel',y='sp',data=wk2)
plt.show()

bar=sns.barplot(x='Wlabel',y='sp',data=wk3)
plt.show()

bar=sns.barplot(x='Wlabel',y='sp',data=wk4)
plt.show()

bar=sns.barplot(x='Wlabel',y='sp',data=wk5)
plt.show()

plt.subplot(311)
plt.plot(wk1['WS A H1'], label="wind speed")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
plt.subplot(312)
plt.plot(wk1['Total'], label="PowerGen")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
plt.subplot(313)
plt.plot(wk1['Dir A H1'], label="wind dir")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
#plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.show()

plt.subplot(311)
plt.plot(wk2['WS A H1'], label="wind speed")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
plt.subplot(312)
plt.plot(wk2['Total'], label="PowerGen")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
plt.subplot(313)
plt.plot(wk2['Dir A H1'], label="wind dir")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
#plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.show()

plt.subplot(311)
plt.plot(wk3['WS A H1'], label="wind speed")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
plt.subplot(312)
plt.plot(wk3['Total'], label="PowerGen")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
plt.subplot(313)
plt.plot(wk3['Dir A H1'], label="wind dir")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
#plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.show()


plt.subplot(311)
plt.plot(wk4['WS A H1'], label="wind speed")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
plt.subplot(312)
plt.plot(wk4['Total'], label="PowerGen")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
plt.subplot(313)
plt.plot(wk4['Dir A H1'], label="wind dir")
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
           ncol=2, mode="expand", borderaxespad=0.)
#plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.show()




ax1 = plt.subplot(3,1,1)
ax1.plot([1],)
plt.plot(wk1['WS A H1'])
plt.show()
plt.plot(wk1['Dir A H1'])
plt.show()
plt.plot(wk1['Total'])
plt.show()


plt.plot(mm1['sp'])
plt.show()
plt.plot(mm2['sp'])
plt.show()
plt.plot(mm3['sp'])
plt.show()
plt.plot(mm4['sp'])
plt.show()
plt.plot(mm5['sp'])
plt.show()




wk1.describe()

m1['Wlabel'].count(1)


ax = WindroseAxes.from_ax()
ax.bar(m1['Dir A H1'], m1['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m2['Dir A H1'], m2['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m3['Dir A H1'], m3['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m4['Dir A H1'], m4['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m5['Dir A H1'], m5['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m6['Dir A H1'], m6['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m7['Dir A H1'], m7['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m8['Dir A H1'], m8['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m9['Dir A H1'], m9['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m10['Dir A H1'], m10['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m11['Dir A H1'], m11['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(m12['Dir A H1'], m12['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()



wk1= d5.loc[0:6*24*7-1]
wk2= d5.loc[6*24*7*1:6*24*7*2-1]
wk3= d5.loc[6*24*7*2:6*24*7*3-1]
wk4= d5.loc[6*24*7*3:6*24*7*4-1]

wk1= ddf.loc[0:2*24*7-1]
wk2= ddf.loc[2*24*7*1:2*24*7*2-1]
wk3= ddf.loc[2*24*7*2:2*24*7*3-1]
wk4= ddf.loc[2*24*7*3:2*24*7*4-1]



wk1= d5.loc[6*24*7*4:6*24*7*5-1]
wk2= d5.loc[6*24*7*5:6*24*7*6-1]
wk3= d5.loc[6*24*7*6:6*24*7*7-1]
wk4= d5.loc[6*24*7*7:6*24*7*8-1]
wk5= d5.loc[6*24*7*8:6*24*7*9-1]

wk1= d5.loc[6*24*7*9:6*24*7*10-1]
wk2= d5.loc[6*24*7*10:6*24*7*11-1]
wk3= d5.loc[6*24*7*11:6*24*7*12-1]
wk4= d5.loc[6*24*7*12:6*24*7*13-1]
wk5= d5.loc[6*24*7*13:6*24*7*14-1]

wk1= d5.loc[6*24*7*14:6*24*7*15-1]
wk2= d5.loc[6*24*7*15:6*24*7*16-1]
wk3= d5.loc[6*24*7*16:6*24*7*17-1]

wk1= d5.loc[6*24*7*17:6*24*7*18-1]
wk2= d5.loc[6*24*7*18:6*24*7*19-1]
wk3= d5.loc[6*24*7*19:6*24*7*20-1]
wk4= d5.loc[6*24*7*20:6*24*7*21-1]

ax = WindroseAxes.from_ax()
ax.bar(wk1['Dir A H1'], wk1['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(wk2['Dir A H1'], wk2['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(wk3['Dir A H1'], wk3['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(wk4['Dir A H1'], wk4['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()

ax = WindroseAxes.from_ax()
ax.bar(wk5['Dir A H1'], wk5['WS A H1'], normed=True, opening=0.8, edgecolor='white')
ax.set_legend()
plt.show()


m1=d6.loc[0:6*24*31-1]
list1=np.array([0,31, 28, 31, 30, 31, 30,31,31,30,31,30,31])
list2=np.cumsum(list1)


m2=d6.loc[6*24*list2[1]:6*24*list2[2]-1]
m3=d6.loc[6*24*list2[2]:6*24*list2[3]-1]
m4=d6.loc[6*24*list2[3]:6*24*list2[4]-1]
m5=d6.loc[6*24*list2[4]:6*24*list2[5]-1]
m6=d6.loc[6*24*list2[5]:6*24*list2[6]-1]
m7=d6.loc[6*24*list2[6]:6*24*list2[7]-1]
m8=d6.loc[6*24*list2[7]:6*24*list2[8]-1]
m9=d6.loc[6*24*list2[8]:6*24*list2[9]-1]
m10=d6.loc[6*24*list2[9]:6*24*list2[10]-1]
m11=d6.loc[6*24*list2[10]:6*24*list2[11]-1]
m12=d6.loc[6*24*list2[11]:6*24*list2[12]-1]


#########################lao guo#########################################
df=pd.read_csv('C:\\Users\\yunchuanl\\Desktop\\2009\\d1.csv')


for i in range(0,df.shape[0]-1):
	#print(i)
	df.loc[i]=df.loc[i+1]-df.loc[i]
df=df.drop(df.shape[0]-1)

for m in range(0,15):
	for j in range(0,5):
		for i in range(0,4):
			a[i]=df.ix[i+j,m]
		if((a[0]>0 and a[1]>0 and a[2]>0 and a[3]>0)or(a[0]<0 and a[1]<0 and a[2]<0 and a[3]<0)):
			#print('yes')
			print('You need to delete %dth column' %m)
		#else:
			#print('No')
	print('end of %dth column' %m)


import pandas as pd
from mapsplotlib import mapsplot as mplt



	
